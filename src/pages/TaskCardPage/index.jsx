/* eslint-disable jsx-a11y/label-has-associated-control */
import './TaskCardPage.css';
import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { InputSwitch } from 'primereact/inputswitch';
import { addLocale } from 'primereact/api';
import EmojiForm from '../../components/EmojiForm';

export default function TaskCardPage() {
	// TODO: –¥–æ–¥–µ–ª–∞—Ç—å —Å—Ç–∞—Ç—É—Å (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å –¥–∏–∑–∞–π–Ω), –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–∞–∫–µ—Ç—É –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –º–µ–Ω—Ç–æ—Ä–∞, –ø—Ä–∏–∫—Ä—É—Ç–∏—Ç—å –∞–ø–∏
	const [name, setName] = useState('–î–∏–∑–∞–π–Ω –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã'); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
	const [project, setProject] = useState('–î–∞—á–∏ –∑–∞ –≥–æ—Ä–æ–¥–æ–º'); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
	const [date, setDate] = useState(''); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–∞—Ç—ã –∑–∞–¥–∞—á–∏
	const [deadline, setDeadline] = useState(''); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–∞
	const [important, setImportant] = useState(false); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è "–≤–∞–∂–Ω–æ"
	const [urgent, setUrgent] = useState(false); // —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏—è "—Å—Ä–æ—á–Ω–æ"
	const [isOpenEmoji, setIsOpenEmoji] = useState(false); // —Å—Ç–µ–π—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å emoji
	const [emoji, setEmoji] = useState('üòõ');

	// –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
	addLocale('ru', {
		firstDayOfWeek: 1,
		dayNames: [
			'–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
			'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
			'–í—Ç–æ—Ä–Ω–∏–∫',
			'–°—Ä–µ–¥–∞',
			'–ß–µ—Ç–≤–µ—Ä–≥',
			'–ü—è—Ç–Ω–∏—Ü–∞',
			'–°—É–±–±–æ—Ç–∞',
		],
		dayNamesShort: ['–í—Å–∫', '–ü–Ω–¥', '–í—Ç—Ä', '–°—Ä–¥', '–ß—Ç–≤', '–ü—Ç–Ω', '–°–±—Ç'],
		dayNamesMin: ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'],
		monthNames: [
			'–Ø–Ω–≤–∞—Ä—å',
			'–§–µ–≤—Ä–∞–ª—å',
			'–ú–∞—Ä—Ç',
			'–ê–ø—Ä–µ–ª—å',
			'–ú–∞–π',
			'–ò—é–Ω—å',
			'–ò—é–ª—å',
			'–ê–≤–≥—É—Å—Ç',
			'–°–µ–Ω—Ç—è–±—Ä—å',
			'–û–∫—Ç—è–±—Ä—å',
			'–ù–æ—è–±—Ä—å',
			'–î–µ–∫–∞–±—Ä—å',
		],
		monthNamesShort: [
			'–Ø–Ω–≤',
			'–§–µ–≤',
			'–ú–∞—Ä',
			'–ê–ø—Ä',
			'–ú–∞–π',
			'–ò—é–Ω',
			'–ò—é–ª',
			'–ê–≤–≥',
			'–°–µ–Ω',
			'–û–∫—Ç',
			'–ù–æ—è',
			'–î–µ–∫',
		],
		today: '–°–µ–≥–æ–¥–Ω—è',
		clear: '–û—á–∏—Å—Ç–∏—Ç—å',
	});

	// —Ñ—É–Ω–∫—Ü–∏—è –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —ç–º–æ–¥–∑–∏
	function handleClickEmoji(e) {
		e.preventDefault();
		setIsOpenEmoji(!isOpenEmoji);
	}

	// —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏
	function handleEmojiSelect(em) {
		setEmoji(em.native);
		setIsOpenEmoji(false);
	}

	function handleSubmit(e) {
		e.preventDefault();
	}

	return (
		<section className="taskcardpage">
			<div className="taskcardpage__title-wrapper">
				<Link to="/" className="taskcardpage__crumb" />
				<h2 className="taskcardpage__title">–ó–∞–¥–∞—á–∞</h2>
			</div>
			<form
				className="taskcardpage__form"
				onSubmit={(e) => {
					handleSubmit(e);
				}}
			>
				<label className="taskcardpage__label" htmlFor="task">
					–ù–∞–∑–≤–∞–Ω–∏–µ
					<input
						id="name"
						name="name"
						className="taskcardpage__input-text"
						value={name}
						onChange={(e) => setName(e.target.value)}
					/>
					<div className="taskcardpage__input-icon" />
				</label>
				<label className="taskcardpage__label" htmlFor="project">
					–ü—Ä–æ–µ–∫—Ç
					<input
						id="project"
						name="project"
						className="taskcardpage__input-text"
						value={project}
						onChange={(e) => setProject(e.target.value)}
					/>
					<div className="taskcardpage__input-icon" />
				</label>
				<div className="taskcardpage__calendar-container">
					<label className="taskcardpage__label" htmlFor="date">
						–î–∞—Ç–∞ –∑–∞–¥–∞—á–∏
						<input
							type="date"
							value={date}
							onChange={(e) => setDate(e.value)}
							className="taskcardpage__input-date"
							id="date"
							name="date"
						/>
					</label>
					<label className="taskcardpage__label" htmlFor="deadline">
						–î–µ–¥–ª–∞–π–Ω
						<input
							type="date"
							value={deadline}
							onChange={(e) => setDeadline(e.value)}
							className="taskcardpage__input-date"
							id="deadline"
							name="deadline"
						/>
					</label>
				</div>
				<div className="taskcardpage__priority-container">
					<h3 className="taskcardpage__priority-title">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</h3>
					<div className="taskcardpage__priority-wrapper">
						<label className="taskcardpage__label-priority">
							–í–∞–∂–Ω–æ
							<InputSwitch
								className="taskcardpage__input-priority"
								checked={important}
								onChange={(e) => setImportant(e.value)}
							/>
						</label>
						<label className="taskcardpage__label-priority">
							–°—Ä–æ—á–Ω–æ
							<InputSwitch
								className="taskcardpage__input-priority"
								checked={urgent}
								onChange={(e) => setUrgent(e.value)}
							/>
						</label>
						<div className="taskcardpage__emoji-container">
							<h3 className="taskcardpage__emoji-title">Emoji</h3>
							<button
								className="taskcardpage__emoji"
								onClick={handleClickEmoji}
							>
								{emoji}
							</button>
							{isOpenEmoji && (
								<EmojiForm onEmojiSelect={(em) => handleEmojiSelect(em)} />
							)}
						</div>
					</div>
				</div>
				<div className="taskcardpage__btns">
					<button type="submit" className="taskcardpage__submit">
						–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
					</button>
					<button className="taskcardpage__delete">–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É</button>
				</div>
			</form>
		</section>
	);
}
